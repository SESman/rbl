% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/funs_delim.r
\name{bottom_delim}
\alias{bottom_delim}
\title{Find the dives' bottom start and end}
\usage{
bottom_delim(obj, method = c("vspd", "haslsey", "bsm", "std"), dvs = NULL,
  ...)
}
\arguments{
\item{obj}{An object of class \code{'ses'} or \code{'tdr'}. In the first case
the function just returns the delim table of the object if it exists else it
computes the delim table from the TDR data.
with time and depth variables named "time" and "depth".}

\item{method}{the method to used. See help for functions in see also section
to get details about possible options. When \code{"vspd"} or \code{"halsey"}
methods fails \code{"std"} is used instead.}

\item{dvs}{a delim table such as return by \code{\link{dive_delim}}. If NULL
\code{\link{dive_delim}} will be used with default arguments to compute one.}

\item{...}{arguments to be passed to \code{\link{bottom_delim_vspd}},
\code{\link{bottom_delim_halsey}}, \code{\link{bottom_delim_bsm}} or
\code{\link{bottom_delim_std}} according to the specified method.}
}
\description{
Find the dives' bottom start and end
}
\examples{
data(exses)
dvs_vspd   <- bottom_delim(exses$tdr)
dvs_halsey <- bottom_delim(exses$tdr, method = "halsey")
dvs_bsm    <- bottom_delim(exses$tdr, method = "bsm")
dvs_std    <- bottom_delim(exses$tdr, method = "std")

# Example using the four methods
n_dv <- 300
opar <- par(no.readonly = TRUE) ; par(mfrow = c(2, 2))
exses$delim <- dvs_vspd
tdrply(plot, 1:2, no = n_dv, obj = exses, main = 'method = "vspd"')
tdrply(points, 1:2, ty = "_", no = n_dv, obj = exses, col = "red")
exses$delim <- dvs_halsey
tdrply(plot, 1:2, no = n_dv, obj = exses, main = 'method = "halsey"')
tdrply(points, 1:2, ty = "_", no = n_dv, obj = exses, col = "red")
exses$delim <- dvs_bsm
tdrply(plot, 1:2, no = n_dv, obj = exses, main = 'method = "bsm"')
tdrply(points, 1:2, ty = "_", no = n_dv, obj = exses, col = "red")
exses$delim <- dvs_std
tdrply(plot, 1:2, no = n_dv, obj = exses, main = 'method = "std"')
tdrply(points, 1:2, ty = "_", no = n_dv, obj = exses, col = "red")
par(opar)
}

